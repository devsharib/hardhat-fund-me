{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x92645f7c649991366ffdee95d97760d9b82cc009860bb17a036f3d6cf7504196",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1047575",
    "logsBloom": "0x
    "blockHash": "0xee17d1613b2a2dbe489e4a9da8f6048674e7598b1d422590403cae2f74077591",
    "transactionHash": "0x92645f7c649991366ffdee95d97760d9b82cc009860bb17a036f3d6cf7504196",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1047575",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "19f68660f23fb2c941afcf188c39adc6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 20 * 1e18;\\n    //859745\\n    //840209\\n    address[] public s_funders;\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConverstionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 fundersIndex = 0;\\n            fundersIndex < s_funders.length;\\n            fundersIndex++\\n        ) {\\n            address funder = s_funders[fundersIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        // transfer fund with diffrent method\\n\\n        //1 - Transfer\\n\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // Send\\n\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n\\n        //Call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Send failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 fundersIndex = 0;\\n            fundersIndex < funders.length;\\n            fundersIndex++\\n        ) {\\n            address funder = funders[fundersIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n        // transfer fund with diffrent method\\n\\n        //1 - Transfer\\n\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // Send\\n\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n\\n        //Call\\n        // (bool callSuccess, ) = payable(msg.sender).call{\\n        //     value: address(this).balance\\n        // }(\\\"\\\");\\n        // require(callSuccess, \\\"Send failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner, \\\"Sender is not owner\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x0713647699746481b1cd51350813c3a8a93ff5a0acc919de02085649ee941c5c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        //ABI\\n        //Address : 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10); //1**10\\n    }\\n\\n    function getVersion(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        return priceFeed.version();\\n    }\\n\\n    function getConverstionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x2d6fc5fda8a156d90fd976927e544cc06d136ae700f54825c7f8cbe9ac397bc9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200131c3803806200131c833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61119662000186600039600081816101f3015281816105c3015281816107c2015261085a01526111966000f3fe60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461013c578063b60d428814610167578063be2693f014610171578063dba6335f146101885761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100ff575b600080fd5b34801561008c57600080fd5b506100956101b3565b6040516100a29190610a7e565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610adc565b6101d9565b6040516100df9190610b22565b60405180910390f35b3480156100f457600080fd5b506100fd6101f1565b005b34801561010b57600080fd5b5061012660048036038101906101219190610b69565b61043a565b6040516101339190610ba5565b60405180910390f35b34801561014857600080fd5b50610151610479565b60405161015e9190610b22565b60405180910390f35b61016f610486565b005b34801561017d57600080fd5b506101866105c1565b005b34801561019457600080fd5b5061019d610858565b6040516101aa9190610ba5565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027690610c1d565b60405180910390fd5b60005b60008054905081101561032a5760008082815481106102a4576102a3610c3d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032290610c9b565b915050610282565b50600067ffffffffffffffff81111561034657610345610ce4565b5b6040519080825280602002602001820160405280156103745781602001602082028036833780820191505090505b506000908051906020019061038a929190610958565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103b190610d44565b60006040518083038185875af1925050503d80600081146103ee576040519150601f19603f3d011682016040523d82523d6000602084013e6103f3565b606091505b5050905080610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e90610da5565b60405180910390fd5b50565b6000818154811061044a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6801158e460913d0000081565b6801158e460913d000006104c5600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087c90919063ffffffff16565b1015610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd90610e11565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b89190610e31565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690610c1d565b60405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610688575b5050505050905060005b815181101561075d5760008282815181106106fa576106f9610c3d565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075590610c9b565b9150506106dc565b50600067ffffffffffffffff81111561077957610778610ce4565b5b6040519080825280602002602001820160405280156107a75781602001602082028036833780820191505090505b50600090805190602001906107bd929190610958565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080490610d44565b60006040518083038185875af1925050503d8060008114610841576040519150601f19603f3d011682016040523d82523d6000602084013e610846565b606091505b505090508061085457600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610888836108b8565b90506000670de0b6b3a764000085836108a19190610e87565b6108ab9190610f10565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090157600080fd5b505afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190610fce565b5050509150506402540be400816109509190611049565b915050919050565b8280548282559060005260206000209081019282156109d1579160200282015b828111156109d05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610978565b5b5090506109de91906109e2565b5090565b5b808211156109fb5760008160009055506001016109e3565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a44610a3f610a3a846109ff565b610a1f565b6109ff565b9050919050565b6000610a5682610a29565b9050919050565b6000610a6882610a4b565b9050919050565b610a7881610a5d565b82525050565b6000602082019050610a936000830184610a6f565b92915050565b600080fd5b6000610aa9826109ff565b9050919050565b610ab981610a9e565b8114610ac457600080fd5b50565b600081359050610ad681610ab0565b92915050565b600060208284031215610af257610af1610a99565b5b6000610b0084828501610ac7565b91505092915050565b6000819050919050565b610b1c81610b09565b82525050565b6000602082019050610b376000830184610b13565b92915050565b610b4681610b09565b8114610b5157600080fd5b50565b600081359050610b6381610b3d565b92915050565b600060208284031215610b7f57610b7e610a99565b5b6000610b8d84828501610b54565b91505092915050565b610b9f81610a9e565b82525050565b6000602082019050610bba6000830184610b96565b92915050565b600082825260208201905092915050565b7f53656e646572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610c07601383610bc0565b9150610c1282610bd1565b602082019050919050565b60006020820190508181036000830152610c3681610bfa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca682610b09565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cd957610cd8610c6c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d2e600083610d13565b9150610d3982610d1e565b600082019050919050565b6000610d4f82610d21565b9150819050919050565b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d8f600b83610bc0565b9150610d9a82610d59565b602082019050919050565b60006020820190508181036000830152610dbe81610d82565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dfb601b83610bc0565b9150610e0682610dc5565b602082019050919050565b60006020820190508181036000830152610e2a81610dee565b9050919050565b6000610e3c82610b09565b9150610e4783610b09565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e7c57610e7b610c6c565b5b828201905092915050565b6000610e9282610b09565b9150610e9d83610b09565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed657610ed5610c6c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1b82610b09565b9150610f2683610b09565b925082610f3657610f35610ee1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6081610f41565b8114610f6b57600080fd5b50565b600081519050610f7d81610f57565b92915050565b6000819050919050565b610f9681610f83565b8114610fa157600080fd5b50565b600081519050610fb381610f8d565b92915050565b600081519050610fc881610b3d565b92915050565b600080600080600060a08688031215610fea57610fe9610a99565b5b6000610ff888828901610f6e565b955050602061100988828901610fa4565b945050604061101a88828901610fb9565b935050606061102b88828901610fb9565b925050608061103c88828901610f6e565b9150509295509295909350565b600061105482610f83565b915061105f83610f83565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109e5761109d610c6c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110db576110da610c6c565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111857611117610c6c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115557611154610c6c565b5b82820290509291505056fea2646970667358221220b4296cb2a964452b427fdb783b30306cf7cc0c12433887d51a6df725d46a207964736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461013c578063b60d428814610167578063be2693f014610171578063dba6335f146101885761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100ff575b600080fd5b34801561008c57600080fd5b506100956101b3565b6040516100a29190610a7e565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610adc565b6101d9565b6040516100df9190610b22565b60405180910390f35b3480156100f457600080fd5b506100fd6101f1565b005b34801561010b57600080fd5b5061012660048036038101906101219190610b69565b61043a565b6040516101339190610ba5565b60405180910390f35b34801561014857600080fd5b50610151610479565b60405161015e9190610b22565b60405180910390f35b61016f610486565b005b34801561017d57600080fd5b506101866105c1565b005b34801561019457600080fd5b5061019d610858565b6040516101aa9190610ba5565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027690610c1d565b60405180910390fd5b60005b60008054905081101561032a5760008082815481106102a4576102a3610c3d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061032290610c9b565b915050610282565b50600067ffffffffffffffff81111561034657610345610ce4565b5b6040519080825280602002602001820160405280156103745781602001602082028036833780820191505090505b506000908051906020019061038a929190610958565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103b190610d44565b60006040518083038185875af1925050503d80600081146103ee576040519150601f19603f3d011682016040523d82523d6000602084013e6103f3565b606091505b5050905080610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e90610da5565b60405180910390fd5b50565b6000818154811061044a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6801158e460913d0000081565b6801158e460913d000006104c5600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461087c90919063ffffffff16565b1015610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd90610e11565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b89190610e31565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690610c1d565b60405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610688575b5050505050905060005b815181101561075d5760008282815181106106fa576106f9610c3d565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075590610c9b565b9150506106dc565b50600067ffffffffffffffff81111561077957610778610ce4565b5b6040519080825280602002602001820160405280156107a75781602001602082028036833780820191505090505b50600090805190602001906107bd929190610958565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080490610d44565b60006040518083038185875af1925050503d8060008114610841576040519150601f19603f3d011682016040523d82523d6000602084013e610846565b606091505b505090508061085457600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610888836108b8565b90506000670de0b6b3a764000085836108a19190610e87565b6108ab9190610f10565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561090157600080fd5b505afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190610fce565b5050509150506402540be400816109509190611049565b915050919050565b8280548282559060005260206000209081019282156109d1579160200282015b828111156109d05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610978565b5b5090506109de91906109e2565b5090565b5b808211156109fb5760008160009055506001016109e3565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a44610a3f610a3a846109ff565b610a1f565b6109ff565b9050919050565b6000610a5682610a29565b9050919050565b6000610a6882610a4b565b9050919050565b610a7881610a5d565b82525050565b6000602082019050610a936000830184610a6f565b92915050565b600080fd5b6000610aa9826109ff565b9050919050565b610ab981610a9e565b8114610ac457600080fd5b50565b600081359050610ad681610ab0565b92915050565b600060208284031215610af257610af1610a99565b5b6000610b0084828501610ac7565b91505092915050565b6000819050919050565b610b1c81610b09565b82525050565b6000602082019050610b376000830184610b13565b92915050565b610b4681610b09565b8114610b5157600080fd5b50565b600081359050610b6381610b3d565b92915050565b600060208284031215610b7f57610b7e610a99565b5b6000610b8d84828501610b54565b91505092915050565b610b9f81610a9e565b82525050565b6000602082019050610bba6000830184610b96565b92915050565b600082825260208201905092915050565b7f53656e646572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610c07601383610bc0565b9150610c1282610bd1565b602082019050919050565b60006020820190508181036000830152610c3681610bfa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca682610b09565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cd957610cd8610c6c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d2e600083610d13565b9150610d3982610d1e565b600082019050919050565b6000610d4f82610d21565b9150819050919050565b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d8f600b83610bc0565b9150610d9a82610d59565b602082019050919050565b60006020820190508181036000830152610dbe81610d82565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dfb601b83610bc0565b9150610e0682610dc5565b602082019050919050565b60006020820190508181036000830152610e2a81610dee565b9050919050565b6000610e3c82610b09565b9150610e4783610b09565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e7c57610e7b610c6c565b5b828201905092915050565b6000610e9282610b09565b9150610e9d83610b09565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed657610ed5610c6c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1b82610b09565b9150610f2683610b09565b925082610f3657610f35610ee1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6081610f41565b8114610f6b57600080fd5b50565b600081519050610f7d81610f57565b92915050565b6000819050919050565b610f9681610f83565b8114610fa157600080fd5b50565b600081519050610fb381610f8d565b92915050565b600081519050610fc881610b3d565b92915050565b600080600080600060a08688031215610fea57610fe9610a99565b5b6000610ff888828901610f6e565b955050602061100988828901610fa4565b945050604061101a88828901610fb9565b935050606061102b88828901610fb9565b925050608061103c88828901610f6e565b9150509295509295909350565b600061105482610f83565b915061105f83610f83565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109e5761109d610c6c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110db576110da610c6c565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111857611117610c6c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115557611154610c6c565b5b82820290509291505056fea2646970667358221220b4296cb2a964452b427fdb783b30306cf7cc0c12433887d51a6df725d46a207964736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}